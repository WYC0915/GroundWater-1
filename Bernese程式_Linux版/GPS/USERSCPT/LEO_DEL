package LEO_DEL;
@ISA = ("RUNBPE");
# ============================================================================
#
# Name    :  LEO_DEL
#
# Purpose :  Clean up campaign of LEOPOD processing,
#            default for -5 days
#
# PARAMs  :  PARAM1: may specify the delay in sessions to delete the files
#                    generated by the LEOPOD BPE
#                    Examples:
#                    "-5"   : delete with five sessions
#                    "-(24)": delete with 24 sessions delay
#                             (note that the value from PARAM1 is used to
#                             extent the BPE time variables in a getKeys-call
#                             below)
#                    "TODAY": delete the files of the current session
#
# Author  :  H. Bock
# Created :  19-Mar-2012
#
# Changes :
#
# ============================================================================
use strict;

use lib "$ENV{BPE}";
use bpe_util qw(prtMess);

sub run {
  my $bpe = shift;

# Get variables
# -------------
  my ($yyssss, $ssss, $wwww, $wwwwd,
      $a, $b, $f,
      $leo, $del, $param1,
      $dirOut, $dirSum, $dirLst, $dirEdt, $dirRes,
      $extOut, $extSum, $extLst, $extEdt, $extRes,
      $dirRxc, $dirPlt, $dirKin, $dirRpr, $dirEle,
      $extRxc, $extPlt, $extKin, $extRpr, $extEle,
      $dirIep, $dirPre, $dirStd, $dirTab, $dirErp, $dirClk,
      $extIep, $extPre, $extStd, $extTab, $extErp, $extClk,
      $dirRxo, $dirPzh, $dirPzo, $dirCzh, $dirCzo, $dirAtt,
      $extRxo, $extPzh, $extPzo, $extCzh, $extCzo, $extAtt ) =
    $bpe->getKeys(
      '$YSS-5','$S-5','$W-5','$WD-5',
      'V_A', 'V_B', 'V_F',
      'V_LEO','V_DEL','PARAM1',
      'DIR_OUT','DIR_SUM','DIR_LST','DIR_EDT','DIR_RES',
      'EXT_OUT','EXT_SUM','EXT_LST','EXT_EDT','EXT_RES',
      'DIR_RXC','DIR_PLT','DIR_KIN','DIR_RPR','DIR_ELE',
      'EXT_RXC','EXT_PLT','EXT_KIN','EXT_RPR','EXT_ELE',
      'DIR_IEP','DIR_PRE','DIR_STD','DIR_TAB','DIR_ERP','DIR_CLK',
      'EXT_IEP','EXT_PRE','EXT_STD','EXT_TAB','EXT_ERP','EXT_CLK',
      'DIR_RXO','DIR_PZH','DIR_PZO','DIR_CZH','DIR_CZO','DIR_ATT',
      'EXT_RXO','EXT_PZH','EXT_PZO','EXT_CZH','EXT_CZO','EXT_ATT' );




# Redefine the date if necessary
    if ( uc $param1 eq "TODAY" ) {
      ($yyssss, $ssss) =
      $bpe->getKeys('$YSS+0','$S+0','$W+0','$WD+0')
    } elsif ( $param1 ne "" ) {
      ($yyssss, $ssss, $wwww, $wwwwd) =
      $bpe->getKeys('$YSS'.$param1,'$S'.$param1,'$W'.$param1,'$WD'.$param1)
    }

# Delete Files if requested
# -------------------------
    if ( ${del} ne "Y" ) {
      prtMess($bpe,"FILES NOT DELETED");

# Delete Files from Previous Run
# ------------------------------
    } else {
        unlink glob "$dirOut*.J_lk";

# Observation files
        unlink glob("${dirRxo}${leo}${ssss}.${extRxo}");

        unlink glob("${dirPzh}${leo}${ssss}.${extPzh}");
        unlink glob("${dirPzo}${leo}${ssss}.${extPzo}");
        unlink glob("${dirCzh}${leo}${ssss}.${extCzh}");
        unlink glob("${dirCzo}${leo}${ssss}.${extCzo}");
        unlink glob("${dirPzh}${leo}${ssss}.${extPzh}_${f}");
        unlink glob("${dirPzo}${leo}${ssss}.${extPzo}_${f}");
        unlink glob("${dirCzh}${leo}${ssss}.${extCzh}_${f}");
        unlink glob("${dirCzo}${leo}${ssss}.${extCzo}_${f}");


# Orbit, ERP, satellite clocks
        unlink glob("${dirIep}${b}${wwww}7.${extIep}");
        unlink glob("${dirErp}${b}${yyssss}.${extErp}");
        unlink glob("${dirClk}${b}${yyssss}.${extClk}");
        unlink glob("${dirPre}${b}${yyssss}.${extPre}");
        unlink glob("${dirTab}${b}${yyssss}.${extTab}");
        unlink glob("${dirStd}${b}${yyssss}.${extStd}");
        unlink glob("${dirRxc}${b}${yyssss}.${extRxc}");

# Orbits, clocks, residuals from LEO
        if (-e "${dirAtt}${leo}${yyssss}.${extAtt}")
          {unlink glob("${dirAtt}${leo}${yyssss}.${extAtt}");}
        unlink glob("${dirKin}KN${f}${yyssss}.${extKin}");
        unlink glob("${dirPre}KN${f}${yyssss}.${extPre}");
        unlink glob("${dirRxc}KN${f}${yyssss}.${extRxc}");
        unlink glob("${dirRes}KN${f}${yyssss}.${extRes}");
        unlink glob("${dirPre}RD${f}${yyssss}.${extPre}");
        unlink glob("${dirStd}RD${f}${yyssss}.${extStd}");
        unlink glob("${dirEle}RD${f}${yyssss}.${extEle}");
        unlink glob("${dirRes}RD${f}${yyssss}.${extRes}");
        unlink glob("${dirPre}${a}*${yyssss}.${extPre}");
        unlink glob("${dirStd}${a}*${yyssss}.${extStd}");
        unlink glob("${dirEle}${a}*${yyssss}.${extEle}");
        unlink glob("${dirRpr}${a}*${yyssss}.${extRpr}");
        unlink glob("${dirKin}${a}${yyssss}.${extKin}");
        unlink glob("${dirRxc}${a}${yyssss}.${extRxc}");

# Program output and summary files
        unlink glob("${dirOut}${leo}${f}${yyssss}.PRC");
        unlink glob("${dirOut}*${f}${yyssss}.${extOut}");
        unlink glob("${dirSum}*${f}${yyssss}.${extSum}");
        unlink glob("${dirPlt}CP${f}${yyssss}.${extPlt}");
        unlink glob("${dirOut}*${a}${yyssss}.${extOut}");
        unlink glob("${dirSum}*${a}${yyssss}.${extSum}");
        unlink glob("${dirEdt}${a}${yyssss}.${extEdt}");
        unlink glob("${dirOut}*${a}?${yyssss}.${extOut}");
        unlink glob("${dirSum}*${a}?${yyssss}.${extSum}");
        unlink glob("${dirRes}${a}${yyssss}.${extRes}");

        unlink glob("${dirOut}ORB${yyssss}.${extOut}");
        unlink glob("${dirLst}ORB${yyssss}.${extLst}");
        unlink glob("${dirOut}O?${a}${yyssss}.${extOut}");
        unlink glob("${dirLst}O?${a}${yyssss}.${extLst}");
        unlink glob("${dirOut}CLK${yyssss}.${extOut}");
        unlink glob("${dirOut}PU${yyssss}.${extOut}");
        unlink glob("${dirOut}TAB${yyssss}.${extOut}");
        unlink glob("${dirOut}RNX${yyssss}.ERR");

    }
}
