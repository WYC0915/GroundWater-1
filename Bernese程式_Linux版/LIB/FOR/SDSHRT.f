      MODULE s_SDSHRT
      CONTAINS

C*
      SUBROUTINE SDSHRT(NSITE,SITCOR,NBASL,NRFDIF,IRCODE)
CC
CC NAME        : SDSHRT
CC               (PGM. SNGDIF_P)
CC
CC PURPOSE     : ADD BASELINE DEFINITIONS
CC               (COMPUTER DEFINED BASELINES, SMALLEST POSSIBLE
CC                BASELINES FIRST)
CC
CC PARAMETERS  :
CC          IN : NSITE  : NUMBER OF SITES                       I*4
CC               SITCOR : LIST OF SITE COORDINATES              R*8(3,*)
CC     IN/ OUT : NBASL  : NUMBER OF BASELINES                   I*4
CC               NRFDIF : LIST OF BASELINES                     I*4(2,*)
CC                        NRFDIF(1,I): 1ST SITE (# WITHIN SITCOR)
CC                        NRFDIF(2,I): 2ND SITE (# WITHIN SITCOR)
CC               IRCODE : RETURN CODE                           I*4
CC                        1: TOO MANY SITES
CC
CC AUTHOR      : W. GURTNER
CC               ASTRONOMICAL INSTITUTE, UNIVERSITY OF BERN
CC               SWITZERLAND
CC
CC CREATED     :  09-JAN-92
CC
CC CHANGES     :  08-MAY-92 : ??: MARK OLD STATIONS WAS WRONG
CC                28-OCT-93 : SF: END OF HEADER := "C*"
CC                27-AUG-94 : MR: NO PROMP1 FOR NON-INTERACTIVE MODE
CC                18-SEP-94 : JJ: MAXSTA TO 200 FROM 100
CC                24-OCT-01 : MM: MODIFIED FOR NEW MENU (NOINTR = 1)
CC                28-JUN-04 : RD: ALLOCATE LOCAL ARRAYS
CC                23-JUN-05 : MM: IMPLICIT NONE AND DECLARATIONS ADDED
CC                28-JUN-05 : MM: UNUSED VARIABLES REMOVED
CC
C*
      USE M_BERN
C
      USE f_ikf
      USE s_dordup
      USE s_alcerr
      USE s_sdgchn
      IMPLICIT NONE
C
C DECLARATIONS INSTEAD OF IMPLICIT
C --------------------------------
      INTEGER*4 I     , IBASL , ICHAIN, IK    , IRC   , IRCODE,
     1          J     , K     , MAXDIS, NBASL , NCHAIN, NDIST , NOINTR,
     2          NSITE
C
      REAL*8    SUM
C
CCC       IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8    SITCOR(3,*)
      INTEGER*4 NRFDIF(2,*),LCHAIN(NSITE)
C
      INTEGER(i4b), DIMENSION(:), ALLOCATABLE :: INDI
      INTEGER(i4b), DIMENSION(:), ALLOCATABLE :: INDK
      INTEGER(i4b), DIMENSION(:), ALLOCATABLE :: INDEX
      REAL(r8b),    DIMENSION(:), ALLOCATABLE :: DIST
C
C GET INTERACTION MODE
CC      CALL GTINTM(NOINTR)
      NOINTR = 1
C
C ALLOCATE LOCAL ARRAYS
C ---------------------
      MAXDIS=IKF(NSITE,NSITE)
C
      ALLOCATE(DIST(MAXDIS),STAT=IRC)
      CALL ALCERR(IRC,'DIST',(/MAXDIS/),'SDSHRT')
      ALLOCATE(INDI(MAXDIS),STAT=IRC)
      CALL ALCERR(IRC,'INDI',(/MAXDIS/),'SDSHRT')
      ALLOCATE(INDK(MAXDIS),STAT=IRC)
      CALL ALCERR(IRC,'INDK',(/MAXDIS/),'SDSHRT')
      ALLOCATE(INDEX(MAXDIS),STAT=IRC)
      CALL ALCERR(IRC,'INDEX',(/MAXDIS/),'SDSHRT')
C
      DO 20 I=NBASL+1,NSITE-1
        NRFDIF(1,I)=0
        NRFDIF(2,I)=0
20    CONTINUE
C
C  COMPUTE ALL DISTANCES BETWEEN NEW SITES AND BETWEEN NEW AND OLD SITES
C
      IK=0
      DO 30 K=2,NSITE
C
        DO 40 I=1,K-1
          DO 80 J=1,NBASL
            IF((I.EQ.NRFDIF(1,J).AND.K.EQ.NRFDIF(2,J)).OR.
     1         (I.EQ.NRFDIF(2,J).AND.K.EQ.NRFDIF(1,J))) GOTO 40
80        CONTINUE
C
          IK=IK+1
          SUM=0.
          DO 50 J=1,3
            SUM=SUM+(SITCOR(J,K)-SITCOR(J,I))**2
50        CONTINUE
C
C  DISTANCE BETWEEN SITE I AND SITE K
          DIST(IK)=DSQRT(SUM)
C
C  POINTERS TO SITE I AND SITE K
          INDI(IK)=I
          INDK(IK)=K
C
40      CONTINUE
30    CONTINUE
C
C  SORT THE DISTANCES WITH RESPECT TO LENGTH
C
      NDIST=IK
      CALL DORDUP(DIST,NDIST,INDEX)
C
C  DEFINE BASELINES, START WITH SHORTEST DISTANCE
C
      J=0
      DO 70 IBASL=NBASL+1,NSITE-1
C
C  POINTER IN 'INDEX'
60      J=J+1
C
C  POINTER IN 'DIST'
        IK=INDEX(J)
C
C  POINTER TO CORRESPONDING SITES, DEFINING DISTANCE DIST(IK)
        I=INDI(IK)
        K=INDK(IK)
C
C  IF BOTH ENDS HAVE PREVIOUSLY BEEN CHAINED TOGETHER: TEST NEXT ONE
C
C  GET ALL SITES CHAINED TOGETHER WITH SITE I
        CALL SDGCHN(I,IBASL-1,NRFDIF,NCHAIN,LCHAIN,IRC)
        IF(IRC.EQ.1) GOTO 910
C  IF SITE K AMONGST THESE SITES: NOT OK
        DO 90 ICHAIN=1,NCHAIN
          IF(K.EQ.LCHAIN(ICHAIN)) GOTO 60
90      CONTINUE
C
C  OK: TAKE THE CURRENT DISTANCE AS BASELINE
        NRFDIF(1,IBASL)=I
        NRFDIF(2,IBASL)=K
C
70    CONTINUE
      NBASL=NSITE-1
C
      IRCODE=0
      GOTO 999
C
910   IRCODE=1
      GOTO 999
C
999   CONTINUE
C
C DEALLOCATE LOCAL ARRAYS
C -----------------------
      DEALLOCATE(DIST,STAT=IRC)
      DEALLOCATE(INDI,STAT=IRC)
      DEALLOCATE(INDK,STAT=IRC)
      DEALLOCATE(INDEX,STAT=IRC)
C
      RETURN
      END SUBROUTINE

      END MODULE
