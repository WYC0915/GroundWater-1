      MODULE s_OPTCYC
      CONTAINS

C*
      SUBROUTINE OPTCYC(IOPT,NFREQ,NSATEL,NUMSAT,IWLSCR,
     1                  NSLIP,LSTSLP,SLPLST,SLPXXX,IONO)
CC
CC NAME       :  OPTCYC
CC
CC PURPOSE    :  DISPLAY, ADD, AND RESET CYCLE SLIPS
CC
CC PARAMETERS :
CC         IN :  IOPT   : OPTION                              I*4
CC                        =1: DISPLAY CYCLE SLIPS
CC                        =2: ADD     CYCLE SLIPS
CC                        =3: RESET   CYCLE SLIPS
CC               NFREQ  : NUMBER OF FREQUENCIES IN FILE       I*4
CC               NSATEL : TOTAL NUMBER OF SATELLITES          I*4
CC               NUMSAT(I),I=1,..,NSATEL: SATELLITE NUMBERS   I*4
CC               IWLSCR(L),L=1,2: WAVELENGTH FACTOR FOR       I*4
CC                        FOR FREQUENCY L
CC                         =1 : SCREENING USING CYCLES
CC                         =2 : SCREENING USING HALF CYCLES
CC     IN/OUT :  NSLIP  : NUMBER OF SLIPS DETECTED            I*4
CC               LSTSLP(K,IS),K=1,..,6, IS=1,2,..,NSLIP:      I*4
CC                        SLIP DESCRIPTION
CC                        K=1: EPOCH NUMBER
CC                        K=2: SV NUMBER
CC                        K=3: FREQUENCY NUMBER
CC                        K=4: WAVELENGTH FACTOR
CC                        K=6: CYCLE SLIP DETECTED BY
CC                             =1: SINGLE FREQ. SLIP DETECTION
CC                             =2: DUAL   FREQ. SLIP DETECTION
CC                             =3: CLOCK
CC                             =4: USER
CC                             ALL CYCLE SLIPS DETECTED IN THE
CC                             LATEST RUN HAVE A NEGATIVE SIGN
CC               SLPLST(IS),IS=1,2,..,NSLIP: SIZE OF SLIP IS  R*8
CC               SLPXXX(2,I),I=1,..,NSLIP: REAL VALUED        R*8
CC                        ESTIMATES FOR SLIP I - INTEGER SLIP
CC                        SINGLE FREQ.: L1/L2 ESTIMATES
CC                        DUAL   FREQ.: L1/L2 AND L5 ESTIMATES
CC               IONO(K,I),K=1,2,3, I=1,2,..,NSLIP            R*8
CC                        K=1: IONOSPHERE MEAN FROM L1, L2
CC                        K=2: IONOSPHERE DIFF. FROM L1, L2
CC                        K=3: RESIDUAL IN L3
CC
CC REMARKS    :  ---
CC
CC AUTHOR     :  M.ROTHACHER
CC
CC VERSION    :  3.4  (JAN 93)
CC
CC CREATED    :  89/08/08 17:35
CC
CC CHANGES    :  16-JUN-93 : ??: ADD OPTION "ALL SATELLITES"=99
CC               11-JAN-94 : SF: INTERNAL READ WITH FORMAT "*" REPLACED
CC                               BY INPCI4,INPCR8
CC               28-JUL-98 : MR: MODIFICATIONS FOR GLONASS
CC               21-JUN-05 : MM: COMLFNUM.inc REMOVED, m_bern ADDED
CC               23-JUN-05 : MM: IMPLICIT NONE AND DECLARATIONS ADDED
CC               04-NOV-05 : HB: INPCR8 IS INTEGER*4 AND NOT REAL*8
CC               03-JUL-09 : SL: inpci4(.,1,...) calls corrected
CC               29-FEB-12 : RD: CORRECT ARRAY DIMENSIONS OF INPCxx ROUTINES
CC               27-MAR-12 : RD: USE PROMP1 AS MODULE NOW
CC               28-MAR-12 : RD: USE INPCI4 AS MODULE NOW
CC               28-MAR-12 : RD: USE INPCR8 AS MODULE NOW
CC
CC COPYRIGHT  :  ASTRONOMICAL INSTITUTE
CC      1989     UNIVERSITY OF BERN
CC               SWITZERLAND
CC
C*
      USE m_bern, ONLY: lfnkbd, lfnprt
      USE s_promp1
      USE s_dspcyc
      USE s_upperc
      USE f_inpcr8
      USE f_inpci4
      IMPLICIT NONE
C
C DECLARATIONS INSTEAD OF IMPLICIT
C --------------------------------
      INTEGER*4 ICYCF1, ICYCS1, ICYFRQ, ICYSVN, ICYTY1, ICYTYP,
     1          IEPO  , IFIRST, IFRCY1, IFRCYC, IFRQ  , IFRQ1 , IFRQ2 ,
     2          IHFRQ , IHSVN , IHTIT , INEW  , IOPT  ,
     3          IRC   , IRCODE, ISATEL, ISLP  , ISLP1 , ISLP2 , ISUMRY,
     4          ITITLE, ITYPA , IVAL  , NFREQ , NSATEL, NSLIP
C
      REAL*8    HCMAX
C
CCC       IMPLICIT REAL*8 (A-H,O-Z)
C
      CHARACTER*80 STRING(3)
      CHARACTER*72 INPUT
      CHARACTER*2  CYCSVN
      CHARACTER*1  CYCTYP,CYCFRQ,CDUMMY
C
      REAL*8       SLPLST(*),SLPXXX(2,*),IONO(3,*),CYCLES(2)
      REAL*8       CYCMAX(1),CYCSIZ(1)
C
      INTEGER*4    NUMSAT(*),IWLSCR(*),LSTSLP(6,*),ISHLP(2),IDUMMY(1)
C
C
      DATA IFIRST/1/
      STRING(1)=' '
C
C INITIALIZATION OF DEFAULTS
C --------------------------
      IF(IFIRST.EQ.1) THEN
        IFIRST=0
        CYCSVN='A'
        ICYSVN=0
        CYCTYP='A'
        ICYTYP=0
        CYCFRQ='A'
        ICYFRQ=0
        IFRCYC=3
      ENDIF
      IF(CYCTYP.EQ.'S') CYCTYP='A'
C
C BRANCH ACCORDING TO OPTION
C --------------------------
      GOTO (100,200,300) IOPT
C
C OPTION 11: DISPLAY CYCLE SLIPS
C ------------------------------
C
C ENTER CYCLE SLIP TYPE TO BE DISPLAYED
100   STRING(2)='CYCLE SLIP TYPE TO BE DISPLAYED'
      WRITE(STRING(3),101) CYCTYP
101   FORMAT('(SINGLE FRQ.=1,DUAL FRQ.=2,CLOCK=3,USER=4,',
     2         'SUMMARY=S,ALL=A,END=E,DF:',A1,') :')
      CALL PROMP1(3,STRING)
      READ(LFNKBD,102) INPUT
102   FORMAT(A)
      IF(INPUT.NE.' ') THEN
        CALL UPPERC(INPUT)
        IF(INPUT.EQ.'E') GOTO 999
        IF(INPUT.EQ.'S') THEN
          ISUMRY=2
        ELSE IF(INPUT.EQ.'A') THEN
          CYCTYP='A'
          ICYTYP=0
          ISUMRY=0
        ELSE
          IVAL=INPCI4(-72,1,0,INPUT,(/ICYTY1/),CDUMMY,IDUMMY,IRCODE)
          IF (IRCODE.NE.0) GOTO 100
          IF(ICYTY1.LT.1.OR.ICYTY1.GT.4) THEN
            WRITE(LFNPRT,103) ICYTY1
103         FORMAT(/,' INVALID TYPE SELECTION:',I3)
            GOTO 100
          ENDIF
          ICYTYP=ICYTY1
          WRITE(CYCTYP,104) ICYTYP
104       FORMAT(I1)
          ISUMRY=0
        ENDIF
      ENDIF
C
C DISPLAY CYCLE SLIPS
      IHTIT=1
      INEW =0
      IHFRQ=0
      IHSVN=0
      HCMAX=1.D20
      CALL DSPCYC(IHTIT,ISUMRY,INEW,ICYTYP,IHFRQ,IHSVN,HCMAX,
     1            NFREQ,NSATEL,NUMSAT,
     2            NSLIP,LSTSLP,SLPLST,SLPXXX,IONO,IRC)
      GOTO 100
C
C OPTION 12: ADD CYCLE SLIPS
C --------------------------
C
C ENTER FREQUENCY
200   IF(NFREQ.EQ.1) THEN
        IFRCYC=1
      ELSE
        WRITE(STRING(2),201) IFRCYC
201     FORMAT('FREQUENCY OF SLIP (1,2,BOTH=3,END=E,DF:',I1,') :')
        CALL PROMP1(2,STRING)
        READ(LFNKBD,102) INPUT
        CALL UPPERC(INPUT)
        IF(INPUT.EQ.'E') GOTO 999
        IF(INPUT.NE.' ') THEN
          IVAL=INPCI4(-72,1,0,INPUT,(/IFRCY1/),CDUMMY,IDUMMY,IRCODE)
          IF (IRCODE.NE.0) GOTO 200
          IF(IFRCY1.LT.1.OR.IFRCY1.GT.3) THEN
            WRITE(LFNPRT,202) IFRCY1
202         FORMAT(/,' INVALID FREQUENCY SELECTION:',I3)
            GOTO 200
          ENDIF
          IFRCYC=IFRCY1
        ENDIF
      ENDIF
C
C ENTER SATELLITE
210   WRITE(STRING(2),211) CYCSVN
211   FORMAT('SATELLITE (ALL=A,END=E,DF:',A3,') :')
      CALL PROMP1(2,STRING)
      READ(LFNKBD,102) INPUT
      CALL UPPERC(INPUT)
      IF(INPUT.EQ.'E'.AND.NFREQ.EQ.1) GOTO 999
      IF(INPUT.EQ.'E'.AND.NFREQ.EQ.2) GOTO 200
      IF(INPUT.NE.' ') THEN
        IF(INPUT.EQ.'A') THEN
          CYCSVN='A '
          ICYSVN=0
        ELSE
          IVAL=INPCI4(-72,1,0,INPUT,(/ICYCS1/),CDUMMY,IDUMMY,IRCODE)
          IF (IRCODE.NE.0) GOTO 200
          DO 215 ISATEL=1,NSATEL
            IF(NUMSAT(ISATEL).EQ.ICYCS1) GOTO 218
215       CONTINUE
          WRITE(LFNPRT,216) ICYCS1
216       FORMAT(/,' SATELLITE NOT FOUND:',I4)
          GOTO 210
218       ICYSVN=ICYCS1
          WRITE(CYCSVN,219) ICYSVN
219       FORMAT(I3)
        ENDIF
      ENDIF
C
C ENTER STARTING EPOCH
220   WRITE(STRING(2),221)
221   FORMAT('EPOCH NUMBER :')
      CALL PROMP1(2,STRING)
      READ(LFNKBD,102) INPUT
      IVAL=INPCI4(-72,1,0,INPUT,(/IEPO/),CDUMMY,IDUMMY,IRCODE)
      IF (IRCODE.NE.0) GOTO 220
C
C ENTER SIZE OF SLIP
225   WRITE(STRING(2),226)
226   FORMAT('SIZE OF CYCLE SLIP (CYCLES,DF:1.0) :')
      CALL PROMP1(2,STRING)
      READ(LFNKBD,102) INPUT
      IF(INPUT.EQ.' ') THEN
        CYCSIZ=1.D0
      ELSE
        IVAL=INPCR8(-72,1,0,INPUT,CYCSIZ,CDUMMY,IDUMMY,IRCODE)
        IF (IRCODE.NE.0) GOTO 225
      ENDIF
C
C DEFINE NEW CYCLE SLIP(S)
      IF(IFRCYC.EQ.3) THEN
        IFRQ1=1
        IFRQ2=2
        IF(IWLSCR(1).EQ.IWLSCR(2)) THEN
          CYCLES(1)=CYCSIZ(1)
          CYCLES(2)=CYCSIZ(1)
        ELSE
          CYCLES(1)=CYCSIZ(1)*IWLSCR(1)
          CYCLES(2)=CYCSIZ(1)*IWLSCR(2)
        ENDIF
      ELSE
        IFRQ1=IFRCYC
        IFRQ2=IFRCYC
        CYCLES(IFRCYC)=CYCSIZ(1)
      ENDIF
      DO 240 IFRQ=IFRQ1,IFRQ2
        IF(CYCSVN.EQ.'A') THEN
          NSLIP=NSLIP+1
          LSTSLP(1,NSLIP)=IEPO
          LSTSLP(2,NSLIP)=99
          LSTSLP(3,NSLIP)=IFRQ
          LSTSLP(4,NSLIP)=IWLSCR(IFRQ)
          LSTSLP(5,NSLIP)=0
          LSTSLP(6,NSLIP)=-4
          SLPLST(NSLIP)=CYCLES(IFRQ)
        ELSE
          NSLIP=NSLIP+1
          LSTSLP(1,NSLIP)=IEPO
          LSTSLP(2,NSLIP)=ICYSVN
          LSTSLP(3,NSLIP)=IFRQ
          LSTSLP(4,NSLIP)=IWLSCR(IFRQ)
          LSTSLP(5,NSLIP)=0
          LSTSLP(6,NSLIP)=-4
          SLPLST(NSLIP)=CYCLES(IFRQ)
        ENDIF
240   CONTINUE
      GOTO 210
C
C OPTION 13: RESET CYCLE SLIPS
C ----------------------------
C
C ENTER CYCLE SLIP TYPE
300   STRING(2)='CYCLE SLIP TYPE TO BE RESET'
      WRITE(STRING(3),301) CYCTYP
301   FORMAT('(SINGLE FRQ.=1,DUAL FRQ.=2,CLOCK=3,USER=4,',
     2         'ALL=A,END=E,DF:',A1,') :')
      CALL PROMP1(3,STRING)
      READ(LFNKBD,102) INPUT
      IF(INPUT.NE.' ') THEN
        CALL UPPERC(INPUT)
        IF(INPUT.EQ.'E') GOTO 999
        IF(INPUT.EQ.'A') THEN
          CYCTYP='A'
          ICYTYP=0
        ELSE
          IVAL=INPCI4(-72,1,0,INPUT,(/ICYTY1/),CDUMMY,IDUMMY,IRCODE)
          IF (IRCODE.NE.0) GOTO 300
          IF(ICYTY1.LT.1.OR.ICYTY1.GT.4) THEN
            WRITE(LFNPRT,103) ICYTY1
            GOTO 300
          ENDIF
          ICYTYP=ICYTY1
          WRITE(CYCTYP,104) ICYTYP
        ENDIF
      ENDIF
C
C ENTER FREQUENCY TO BE RESET
310   IF(NFREQ.EQ.1) THEN
        CYCFRQ='1'
        ICYFRQ=1
      ELSE
        WRITE(STRING(2),311) CYCFRQ
311     FORMAT('FREQUENCY TYPES TO BE RESET ',
     1         '(1,2,ALL=A,DF:',A1,') :')
        CALL PROMP1(2,STRING)
        READ(LFNKBD,102) INPUT
        IF(INPUT.NE.' ') THEN
          CALL UPPERC(INPUT)
          IF(INPUT.EQ.'A') THEN
            CYCFRQ='A'
            ICYFRQ=0
          ELSE
            IVAL=INPCI4(-72,1,0,INPUT,(/ICYCF1/),CDUMMY,IDUMMY,IRCODE)
            IF (IRCODE.NE.0) GOTO 310
            IF(ICYCF1.LT.1.OR.ICYCF1.GT.2) THEN
              WRITE(LFNPRT,202) ICYCF1
              GOTO 310
            ENDIF
            ICYFRQ=ICYCF1
            WRITE(CYCFRQ,104) ICYFRQ
          ENDIF
        ENDIF
      ENDIF
C
C ENTER SATELLITE
320   WRITE(STRING(2),321) CYCSVN
321   FORMAT('SATELLITE (ALL=A,DF:',A3,') :')
      CALL PROMP1(2,STRING)
      READ(LFNKBD,102) INPUT
      CALL UPPERC(INPUT)
      IF(INPUT.NE.' ') THEN
        IF(INPUT.EQ.'A') THEN
          CYCSVN='A '
          ICYSVN=0
        ELSE
          IVAL=INPCI4(-72,1,0,INPUT,(/ICYCS1/),CDUMMY,IDUMMY,IRCODE)
          IF (IRCODE.NE.0) GOTO 320
          DO 325 ISATEL=1,NSATEL
            IF(NUMSAT(ISATEL).EQ.ICYCS1) GOTO 330
325       CONTINUE
          WRITE(LFNPRT,216) ICYCS1
          GOTO 320
330       ICYSVN=ICYCS1
          WRITE(CYCSVN,219) ICYSVN
        ENDIF
      ENDIF
C
C ENTER MAXIMUM SIZE OF SLIPS TO BE RESET
335   WRITE(STRING(2),336)
336   FORMAT('MAXIMUM SIZE OF SLIPS TO BE RESET (CYCLES,DF:ALL) :')
      CALL PROMP1(2,STRING)
      READ(LFNKBD,102) INPUT
      IF(INPUT.EQ.' ') THEN
        CYCMAX=1.D20
      ELSE
        IVAL=INPCR8(-72,1,0,INPUT,CYCMAX,CDUMMY,IDUMMY,IRCODE)
        IF (IRCODE.NE.0) GOTO 335
      ENDIF
C
C PRINT ALL CYCLE SLIPS WITH THE ENTERED SPECIFICATIONS
340   WRITE(LFNPRT,341)
341   FORMAT(//,1X,72('-'),
     1       /,' LIST OF CYCLE SLIPS WITH ENTERED SPECIFICATIONS',
     2       /,1X,72('-'))
      ITITLE=0
      ISUMRY=0
      INEW  =0
      CALL DSPCYC(ITITLE,ISUMRY,INEW,ICYTYP,ICYFRQ,ICYSVN,CYCMAX(1),
     1            NFREQ,NSATEL,NUMSAT,
     2            NSLIP,LSTSLP,SLPLST,SLPXXX,IONO,IRC)
      IF(IRC.EQ.1) GOTO 300
C
C RESET WHAT CYCLE SLIP NUMBERS
350   WRITE(STRING(2),351)
351   FORMAT('ENTER NUMBERS TO BE RESET ',
     1         '(FROM,TO,ALL=A,END=E,DF:A) :')
      CALL PROMP1(2,STRING)
      READ(LFNKBD,102) INPUT
      CALL UPPERC(INPUT)
      IF(INPUT.EQ.'E') GOTO 300
      IF(INPUT.EQ.' '.OR.INPUT.EQ.'A') THEN
        ISLP1=1
        ISLP2=NSLIP
      ELSE
        IVAL=INPCI4(-72,2,0,INPUT,ISHLP,CDUMMY,IDUMMY,IRCODE)
        ISLP1=ISHLP(1)
        ISLP2=ISHLP(2)
        IF (IRCODE.EQ.8)THEN
          ISLP2=ISLP1
        ELSE IF (IRCODE.NE.0) THEN
          GOTO 350
        ENDIF
      ENDIF
C
C SET ABSOLUTE VALUE OF LSTSLP(6,*) TO LSTSLP(6,*)+4 = RESET
      DO 360 ISLP=1,NSLIP
        ITYPA=IABS(LSTSLP(6,ISLP))
        IF(CYCTYP.NE.'A'.AND.ITYPA         .NE.ICYTYP) GOTO 360
        IF(CYCFRQ.NE.'A'.AND.LSTSLP(3,ISLP).NE.ICYFRQ) GOTO 360
        IF(CYCSVN.NE.'A'.AND.LSTSLP(2,ISLP).NE.ICYSVN) GOTO 360
        IF(CYCMAX(1).LT.DABS(SLPLST(ISLP)))            GOTO 360
        IF(ISLP.LT.ISLP1.OR.ISLP.GT.ISLP2)             GOTO 360
        IF(ITYPA.GT.4)                                 GOTO 360
        LSTSLP(6,ISLP)=LSTSLP(6,ISLP)+ISIGN(4,LSTSLP(6,ISLP))
360   CONTINUE
      GOTO 340
C
C RETURN
C ------
999   RETURN
      END SUBROUTINE

      END MODULE
