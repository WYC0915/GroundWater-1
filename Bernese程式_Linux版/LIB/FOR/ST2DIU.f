      MODULE s_ST2DIU
      CONTAINS

C*
      SUBROUTINE ST2DIU(XSTA,FHR,T,XCOSTA)
CC
CC  PURPOSE   :  .
CC  THESE ARE THE SUBROUTINES FOR THE STEP2 OF THE TIDAL CORRECTIONS.
CC  THEY ARE CALLED IN STEP1 AND ACCOUNT FOR THE FREQUENCY DEPENDENCE
CC  OF THE LOVE NUMBERS.
CC
CC PARAMETERS :
CC         IN :  XSTA,FHR,T,
CC     IN/OUT :  XCOSTA
CC
CC REMARKS    :  ---
CC
CC AUTHOR     :  V. DEHANT, S. MATHEWS AND J. GIPSON
CC
CC VERSION    :  4.1
CC
CC CREATED    :  06-OCT-97
CC
CC CHANGES    :  06-OCT-97 : TS: ADDEPTED FOR THE BERNESE SOFTWARE
CC               23-JUN-05 : MM: IMPLICIT NONE AND DECLARATIONS ADDED
CC               04-MAY-12 : RD: USE DMOD FROM MODULE
CC
CC COPYRIGHT  :  ASTRONOMICAL INSTITUTE
CC      1997     UNIVERSITY OF BERN
CC               SWITZERLAND
CC
C*
      USE l_basfun, ONLY: dmod
      IMPLICIT NONE
C
C DECLARATIONS INSTEAD OF IMPLICIT
C --------------------------------
      INTEGER*4 I     , J
C
      REAL*8    COSLA , COSPHI, DE    , DN    , DR    , FHR   , H     ,
     1          P     , PR    , PS    , RSTA  , S     , SINLA , SINPHI,
     2          T     , TAU   , THETAF, ZLA   , ZNS
C
CCC       IMPLICIT REAL*8 (A-H,O-Z)
C
      REAL*8 XSTA(*),XCOSTA(*)
      REAL*8 DATDI(7,11),DEGRAD
C
      DATA DEGRAD/0.0174532925d0/
      DATA ((DATDI(i,j),i=1,7),j=1,11)/
     * -2.D0 ,0.D0,1.D0, 0.D0, 0.D0,-0.09D0,0.0D0,
     * -1.D0, 0.D0,0.D0,-1.D0, 0.D0,-0.10D0,0.0D0,
     * -1.D0, 0.D0,0.D0, 0.D0, 0.D0,-0.53D0,0.02D0,
     *  0.D0, 0.D0,1.D0, 0.D0, 0.D0, 0.06D0,0.0D0,
     *  1.D0,-3.D0,0.D0, 0.D0, 1.D0,-0.05D0,0.0D0,
     *  1.D0,-2.D0,0.D0, 0.D0, 0.D0,-1.23D0,0.07D0,
     *  1.D0, 0.D0,0.D0,-1.D0, 0.D0,-0.22D0,0.01D0,
     *  1.D0, 0.D0,0.D0, 0.D0, 0.D0,12.04D0,-0.72D0,
     *  1.D0, 0.D0,0.D0, 1.D0, 0.D0, 1.74D0,-0.10D0,
     *  1.D0, 1.D0,0.D0, 0.D0,-1.D0,-0.50D0, 0.03D0,
     *  1.D0, 2.D0,0.D0, 0.D0, 0.D0,-0.11D0, 0.01D0/
C
      S=218.31664563D0+481267.88194D0*T-0.0014663889D0*T**2
     1   +0.00000185139D0*T**3
      TAU=fhr*15.D0+280.4606184D0+36000.7700536D0*T+0.00038793D0*T**2
     1   -0.0000000258D0*T**3-S
      PR=1.396971278D0*T+0.000308889D0*T**2+0.000000021D0*T**3
     1   +0.000000007D0*T**4
      S=S+PR
      H=280.46645D0+36000.7697489D0*T+0.00030322222D0*T**2
     1   +0.000000020D0*T**3-0.00000000654D0*T**4
      P=83.35324312D0+4069.01363525D0*T-0.01032172222D0*T**2
     1   -0.0000124991D0*T**3+0.00000005263D0*T**4
      ZNS=234.95544499D0 +1934.13626197D0*T-0.00207561111D0*T**2
     1   -0.00000213944D0*T**3+0.00000001650D0*T**4
      PS=282.93734098D0+1.71945766667D0*T+0.00045688889D0*T**2
     1   -0.00000001778D0*T**3-0.00000000334D0*T**4
C
C REDUCE ANGLES TO BETWEEN 0 AND 360
C ----------------------------------
      S=  DMOD(S,360.D0)
      TAU=DMOD(TAU,360.D0)
      H=  DMOD(H,360.D0)
      P=  DMOD(P,360.D0)
      ZNS=DMOD(ZNS,360.D0)
      PS= DMOD(PS,360.D0)
C
      RSTA=DSQRT(XSTA(1)**2+XSTA(2)**2+XSTA(3)**2)
      SINPHI=XSTA(3)/RSTA
      COSPHI=DSQRT(XSTA(1)**2+XSTA(2)**2)/RSTA
C
      COSLA=XSTA(1)/COSPHI/RSTA
      SINLA=XSTA(2)/COSPHI/RSTA
      ZLA  =DATAN2(XSTA(2),XSTA(1))
C
      DO 99 I=1,3
        XCOSTA(I)=0.D0
99    CONTINUE
C
      DO 98 J=1,11
        THETAF=(TAU+DATDI(1,J)*S+DATDI(2,J)*H+DATDI(3,J)*P+
     1          DATDI(4,J)*ZNS+DATDI(5,J)*PS)*DEGRAD
        DR=DATDI(6,J)*2.D0*SINPHI*COSPHI*SIN(THETAF+ZLA)
        DN=DATDI(7,J)*(COSPHI**2-SINPHI**2)*SIN(THETAF+ZLA)
        DE=DATDI(7,J)*SINPHI*COS(THETAF+ZLA)
        XCOSTA(1)=XCOSTA(1)+DR*COSLA*COSPHI-DE*SINLA
     1           -DN*SINPHI*COSLA
        XCOSTA(2)=XCOSTA(2)+DR*SINLA*COSPHI+DE*COSLA
     1           -DN*SINPHI*SINLA
        XCOSTA(3)=XCOSTA(3)+DR*SINPHI+DN*COSPHI
98    CONTINUE
C
      DO 97 I=1,3
        XCOSTA(I)=XCOSTA(I)/1000.D0
97    CONTINUE
C
      RETURN
      END SUBROUTINE

      END MODULE
