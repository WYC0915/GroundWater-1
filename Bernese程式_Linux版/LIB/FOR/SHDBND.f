      MODULE s_SHDBND
      CONTAINS

C*
      SUBROUTINE SHDBND(NUMSAT,HT0,TOSC,ELE,IORSYS,TSHAD,RADK)
CC
CC NAME       :  SHDBND
CC
CC PURPOSE    :  APPROXIMATE COMPUTATION OF LIGHT/SHADOW BOUNDARIES
CC               WITHIN THE CURRENT INTEGRATION INTERVAL
CC
CC PARAMETERS :
CC         IN :  HT0    : ARRAY CONTAINING ARC CHARACT.        R*8(*)
CC               HT0(1) : LENGTH (IN SEC)
CC               HT0(2) : START OF ARC (MJD)
CC               TOSC   : OSCULATION EPOCH                     R*8
CC               ELE    : OSCULING ELEMENTS AT TOSC            R*8(*)
CC               IORSYS : DEFINITON OF ORBITAL SYSTEM          I*4
CC               RADK   : INCREASE FACTOR FOR EARTH RADIUS     R*8
CC        OUT :  TSHAD  : SHADOW ENTRY, SHADOW EXIT            R*8(*)
CC
CC REMARKS    :  ---
CC
CC AUTHOR     :  G. BEUTLER
CC
CC VERSION    :  3.3
CC
CC CREATED    :  93/06/10
CC
CC CHANGES    :  11-JUL-94 : GB: CHANGE SIGN FOR UD (SHADOW ENTRY)
CC               29-MAR-95 : RW: ADD INCREASE FACTOR FOR EARTH RADIUS
CC                               ALLOW ARC LENGTH LESS THAN 0.5 DAYS
CC               21-APR-95 : GB: NO SHADOW AFTER REFINEMENT
CC               06-JUN-96 : TS: REMOVED UNUSED VARIABLES
CC               16-JUN-05 : MM: COMCONST.inc REPLACED BY d_const
CC               21-JUN-05 : MM: COMLFNUM.inc REMOVED
CC               23-JUN-05 : MM: IMPLICIT NONE AND DECLARATIONS ADDED
CC               30-MAY-07 : AG: USE s_suneff, SUNPOS(3) -> SUNPOS(4)
CC               04-MAY-08 : RD: NUMSAT ADDED TO CALL OF SR XYZELE
CC               01-OCT-10 : CR: NEW CALL OF SUNEFF
CC
CC COPYRIGHT  :  ASTRONOMICAL INSTITUTE
CC      1989     UNIVERSITY OF BERN
CC               SWITZERLAND
CC
C*
      USE d_const, ONLY: GM, PI
      USE s_ephem
      USE s_suneff
      USE s_xyzele
      USE s_ddreh
      USE s_dmlmav
      IMPLICIT NONE
C
C DECLARATIONS INSTEAD OF IMPLICIT
C --------------------------------
      INTEGER*4 IORSYS, NUMOLD, NUMSAT
C
      REAL*8    AD    , AT    , COSU  , D1    , D2    , DT    , EARTHR,
     1          EENTRY, EEXIT , ET    , HOLD  , PERT  , RADK  , REV   ,
     2          ROSC  , S     , SI2U  , SINU  , T0T   , TABINT, TENTRY,
     3          TEPS  , TEXIT , TOSC  , TSEC  , TSENTR, TSEXIT, TSTOLD,
     4          TSUN  , UD    , UENTRY, UEXIT , UOSC  , VENTRY, VEXIT ,
     5          VOSC  , XIT   , XITER , XKNT  , XKNTER, XMENTR, XMEXIT,
     6          XN
C
CCC       IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 ELE(*),TSHAD(*),HT0(*)
C
C LOCAL DIMENSIONS
      REAL*8 SUNPOS(4),DRNS(3,3),DRIS(3,3),XSAT(3),VSAT(3),DUM3(3)
C
C COMMON ARRAYS
      DATA NUMOLD/0/,TSTOLD/0.D0/,HOLD/-1.D0/
      DATA EARTHR/6367395.1D0/,TEPS/1.D-8/
C
C SAME REQUEST AS BEFORE ?
C ----------------------
      IF(NUMSAT.EQ.NUMOLD.AND.TSTOLD.EQ.HT0(2).AND.
     1                        HOLD.EQ.HT0(1))THEN
        TSHAD(1)=TENTRY
        TSHAD(2)=TEXIT
        GO TO 999
      END IF
C
C POSITION OF SUN AT ARC MIDDLE
C -----------------------------
      TABINT=2.D0
      TSUN=HT0(2)+HT0(1)/2/86400.D0+(19.D0+32.184D0)/86400.D0
      CALL SUNEFF(IORSYS,TABINT,TSUN,SUNPOS,DUM3)
C
C TRANSFORMATION MATRICES INTO ORBITAL SYSTEM
C -------------------------------------------
      XKNTER=DATAN2(SUNPOS(1),-SUNPOS(2))
      XITER=DATAN2(DSQRT(SUNPOS(1)**2+SUNPOS(2)**2),SUNPOS(3))
      CALL DDREH(3,XKNTER,DRNS)
      CALL DDREH(1,XITER,DRIS)
C
C SATELLITE POSITION AND VELOCITY AT MEAN TIME :
      TSEC=(HT0(2)-TOSC)*86400.D0+HT0(1)/2
      CALL EPHEM(GM,ELE(1),ELE(2),ELE(3),ELE(4),ELE(5),
     1           ELE(7),TSEC,XSAT,VSAT)
C
C TRANSFORM POSITION AND VELOCITY INTO TERMINATOR SYSTEM
      CALL DMLMAV(XSAT,DRNS,XSAT)
      CALL DMLMAV(XSAT,DRIS,XSAT)
      CALL DMLMAV(VSAT,DRNS,VSAT)
      CALL DMLMAV(VSAT,DRIS,VSAT)
C
C ORBITAL ELEMENTS IN TERMINATOR SYSTEM
      CALL XYZELE(GM,TSEC,XSAT,VSAT,NUMSAT,AT,ET,XIT,XKNT,PERT,T0T)
      XN=DSQRT(GM/AT**3)
      REV=2*PI/XN
C
C DETECT SHADOW BOUNDARIES :
C ------------------------
      UOSC=3*PI/2
      VOSC=UOSC-PERT
      ROSC=AT*(1-ET**2)/(1+ET*DCOS(VOSC))
C
C OSCULATION TAKES PLACE
      IF(DABS(DCOS(XIT)).LE.EARTHR*RADK/ROSC)THEN
C
C SIN(ARG OF LAT IN TERMINATOR SYSTEM)
        SI2U=(1.D0-(EARTHR*RADK/ROSC)**2)/(1.D0-DCOS(XIT)**2)
        SINU=DSQRT(SI2U)
        COSU=DSQRT(1.D0-SI2U)
        UENTRY=DATAN2(-SINU,-COSU)
        UEXIT =DATAN2(-SINU, COSU)
C
C SHADOW ENTRY
C ------------
        VENTRY=UENTRY-PERT
        EENTRY=2*DATAN(DSQRT((1-ET)/(1+ET))*DTAN(VENTRY/2))
        XMENTR=EENTRY-ET*DSIN(EENTRY)
C  UD... TIME OF ONE REVOLUTION, AD... LENGTH OF SCANNED ARC = HT0(1)
        UD=REV/86400.D0
        AD=HT0(1)/86400.D0
        TSENTR=XMENTR/XN+T0T
        TENTRY=TOSC+TSENTR/86400.D0
        IF (TENTRY.LT.HT0(2)) THEN
   20      TENTRY=TENTRY+UD
           IF(TENTRY.GT.HT0(2).AND.TENTRY.LT.HT0(2)+AD) GOTO 50
           IF(TENTRY.GT.HT0(2)+AD) THEN
             TSHAD(1)=0.D0
             GOTO 100
           ENDIF
           GOTO 20
        ENDIF
        IF (TENTRY.GT.HT0(2)+AD) THEN
   30      TENTRY=TENTRY-UD
           IF(TENTRY.GT.HT0(2).AND.TENTRY.LT.HT0(2)+AD) GOTO 50
           IF(TENTRY.LT.HT0(2)) THEN
             TSHAD(1)=0.D0
             GOTO 100
           ENDIF
           GOTO 30
        ENDIF
   50   TSHAD(1)=TENTRY
C
C SHADOW EXIT
C -----------
  100   VEXIT =UEXIT -PERT
        EEXIT =2*DATAN(DSQRT((1-ET)/(1+ET))*DTAN(VEXIT/2))
        XMEXIT=EEXIT -ET*DSIN(EEXIT)
        TSEXIT=XMEXIT/XN+T0T
        TEXIT =TOSC+TSEXIT/86400.D0
        IF (TEXIT.LT.HT0(2)) THEN
  120      TEXIT=TEXIT+UD
           IF(TEXIT.GT.HT0(2).AND.TEXIT.LT.HT0(2)+AD) GOTO 150
           IF(TEXIT.GT.HT0(2)+AD) THEN
             TSHAD(2)=0.D0
             GOTO 200
           ENDIF
           GOTO 120
        ENDIF
        IF (TEXIT.GT.HT0(2)+AD) THEN
  130      TEXIT=TEXIT-UD
           IF(TEXIT.GT.HT0(2).AND.TEXIT.LT.HT0(2)+AD) GOTO 150
           IF(TEXIT.LT.HT0(2)) THEN
             TSHAD(2)=0.D0
             GOTO 200
           ENDIF
           GOTO 130
        ENDIF
  150   TSHAD(2)=TEXIT
C
C REFINE SHADOW ENTRY AND EXIT TIMES
C ----------------------------------
C
C POSITION OF SUN AT TIME TENTRY :
C ------------------------------
  200   IF (TSHAD(1).LT.TEPS) GOTO 280
        TSUN=TENTRY+(19.D0+32.184D0)/86400.D0
        CALL SUNEFF(IORSYS,TABINT,TSUN,SUNPOS,DUM3)
C
C TRANSFORMATION MATRICES INTO ORBITAL SYSTEM
C -------------------------------------------
        XKNTER=DATAN2(SUNPOS(1),-SUNPOS(2))
        XITER=DATAN2(DSQRT(SUNPOS(1)**2+SUNPOS(2)**2),SUNPOS(3))
        CALL DDREH(3,XKNTER,DRNS)
        CALL DDREH(1,XITER,DRIS)
C
C SATELLITE POSITION AND VELOCITY AT TIME TENTRY:
        TSEC=(TENTRY-TOSC)*86400.D0
        CALL EPHEM(GM,ELE(1),ELE(2),ELE(3),ELE(4),ELE(5),
     1             ELE(7),TSEC,XSAT,VSAT)
        CALL DMLMAV(XSAT,DRNS,XSAT)
        CALL DMLMAV(XSAT,DRIS,XSAT)
        D1=DSQRT(XSAT(1)**2+XSAT(2)**2)-EARTHR*RADK
C
        DT=-5.D0/1440
        TSEC=(TENTRY+DT-TOSC)*86400.D0
        CALL EPHEM(GM,ELE(1),ELE(2),ELE(3),ELE(4),ELE(5),
     1             ELE(7),TSEC,XSAT,VSAT)
        CALL DMLMAV(XSAT,DRNS,XSAT)
        CALL DMLMAV(XSAT,DRIS,XSAT)
        D2=DSQRT(XSAT(1)**2+XSAT(2)**2)-EARTHR*RADK
        S=(D2-D1)/DT
        TENTRY=TENTRY-D1/S
        TSHAD(1)=TENTRY
C
C POSITION OF SUN AT TIME TEXIT :
C ------------------------------
  280   IF (TSHAD(2).EQ.0.D0) GOTO 300
        TSUN=TEXIT+(19.D0+32.184D0)/86400.D0
        CALL SUNEFF(IORSYS,TABINT,TSUN,SUNPOS,DUM3)
C
C TRANSFORMATION MATRICES INTO ORBITAL SYSTEM
C -------------------------------------------
        XKNTER=DATAN2(SUNPOS(1),-SUNPOS(2))
        XITER=DATAN2(DSQRT(SUNPOS(1)**2+SUNPOS(2)**2),SUNPOS(3))
        CALL DDREH(3,XKNTER,DRNS)
        CALL DDREH(1,XITER,DRIS)
C
C SATELLITE POSITION AND VELOCITY AT TIME TEXIT :
        TSEC=(TEXIT-TOSC)*86400.D0
        CALL EPHEM(GM,ELE(1),ELE(2),ELE(3),ELE(4),ELE(5),
     1             ELE(7),TSEC,XSAT,VSAT)
        CALL DMLMAV(XSAT,DRNS,XSAT)
        CALL DMLMAV(XSAT,DRIS,XSAT)
        D1=DSQRT(XSAT(1)**2+XSAT(2)**2)-EARTHR*RADK
C
        DT= 5.D0/1440.D0
        TSEC=(TEXIT+DT-TOSC)*86400.D0
        CALL EPHEM(GM,ELE(1),ELE(2),ELE(3),ELE(4),ELE(5),
     1             ELE(7),TSEC,XSAT,VSAT)
        CALL DMLMAV(XSAT,DRNS,XSAT)
        CALL DMLMAV(XSAT,DRIS,XSAT)
        D2=DSQRT(XSAT(1)**2+XSAT(2)**2)-EARTHR*RADK
        S=(D2-D1)/DT
        TEXIT=TEXIT-D1/S
        TSHAD(2)=TEXIT
C
C NO SHADOW CONDITION WITH REFINED BOUNDARY COMPUTATION
        IF(DABS(TSHAD(1)-TSHAD(2)).LT.0.1D0.AND.
     1     TSHAD(2).LT.TSHAD(1))THEN
          TSHAD(1)=0.D0
          TSHAD(2)=0.D0
          TENTRY=0.D0
          TEXIT=0.D0
        END IF
      ELSE
        TENTRY=0.D0
        TEXIT=0.D0
        TSHAD(1)=0.D0
        TSHAD(2)=0.D0
      END IF
  300 NUMOLD=NUMSAT
      TSTOLD=HT0(2)
      HOLD  =HT0(1)
  999 RETURN
      END SUBROUTINE

      END MODULE
