      MODULE s_DEFCON
      CONTAINS

C*
      SUBROUTINE DEFCON(iconst)
CC
CC NAME       :  DEFCON
CC
CC PURPOSE    :  DEFINE AND READ CONSTANTS FOR BERNESE GPS SOFTWARE
CC
CC PARAMETERS :  ---
CC
CC REMARKS    :  ---
CC
CC AUTHOR     :  G.BEUTLER
CC
CC CREATED    :  87/09/24 09:05
CC
CC CHANGES    :  14-SEP-92 : ??: USE "OPNFIL"
CC               31-AUG-95 : SS: MEAN RADIUS OF THE EARTH INTRODUCED
CC               06-OCT-97 : HH: ADD GLONASS, NO ORDERING OF LINES
CC                               REQUIRED
CC               22-OCT-97 : DI: DEFINE GPS VALUES FOR FREQUENCY AND
CC                               WAVELENGTH IN COMMON ARRAYS 'FRQ','WLGT'
CC               04-MAY-98 : SS: "FACTEC" ADDED
CC               21-DEC-01 : HU: USE D_CONST, M_BERN, AND NOT COMCONST.inc
CC               12-DEC-02 : HU: CONST_DEF INTRODUCED
CC               16-JUN-05 : MM: COMCONST.inc REPLACED BY d_const
CC               23-JUN-05 : MM: IMPLICIT NONE AND DECLARATIONS ADDED
CC               28-JUN-05 : MM: UNUSED VARIABLES REMOVED
CC               16-OCT-06 : AG: AU ADDED
CC               26-FEB-07 : AG: ICONST IMPLEMENTED
CC               27-FEB-07 : AG: ALLOW CALL TO DEFCON WITHOUT CONST. FILE
CC               27-MAR-07 : AG: GALILEO FREQUENCIES IMPLEMENTED
CC               12-APR-11 : CR: J2 ADDED
CC               01-MAY-12 : LP: FREQS, FREQC, FREQJ, and FREQ(3) added
CC
CC COPYRIGHT  :  ASTRONOMICAL INSTITUTE
CC      1987     UNIVERSITY OF BERN
CC               SWITZERLAND
CC
C*
      USE m_bern
      USE d_const, ONLY: pi, c, GM, GMM, GMS, AE, J2, conRE, facTec, P0,
     1                   freq, freqp, wlgth, omega, ETUT, wgtPha,
     2                   wgtCod, hRef, pRef, tRef, humRef, date, time,
     3                   const_def, AU, ars, rho, freqe, freqs, freqc,
     4                   freqj

      USE s_opnfil
      USE s_exitrc
      USE s_gtflna
      USE s_opnerr
      USE s_dattim
      IMPLICIT NONE
C
C DECLARATIONS INSTEAD OF IMPLICIT
C --------------------------------
      INTEGER*4 I     , IOSTAT, IRC   , iconst
C
CCC       IMPLICIT REAL*8 (A-H,O-Z)
C
      CHARACTER*32 CONFIL
      CHARACTER    CONPAR*6,STRING*16
C
      INCLUDE 'COMFREQ.inc'
C
C PI
      PI  = 4d0 * DATAN(1.D0)
C RHO
      RHO = 180d0 / PI
C ARCSEC
      ARS = RHO * 3600d0
C
C DATE AND TIME
      CALL DATTIM(DATE,TIME)
C
      IF (iconst == 1) THEN
        C        =0.D0
        FREQ     =0.D0
        FREQP    =0.D0
        FREQG(1) =0.D0
        FREQG(2) =0.D0
        DFREQG(1)=0.D0
        DFREQG(2)=0.D0
        FREQGP   =0.D0
        FREQE    =0.D0
        FREQS    =0.D0
        FREQC    =0.D0
        FREQJ    =0.D0
        GM       =0.D0
        GMS      =0.D0
        GMM      =0.D0
        AU       =0.D0
        AE       =0.D0
        J2       =0.D0
        CONRE    =0.D0
        FACTEC   =0.D0
        P0       =0.D0
        OMEGA    =0.D0
        ETUT     =0.D0
        WGTPHA   =0.D0
        HREF     =0.D0
        PREF     =0.D0
        TREF     =0.D0
        HUMREF   =0.D0
C
C OPEN FILE WITH GPS CONSTANTS
        CALL GTFLNA(1,'CONST  ',CONFIL,IRC)
        CALL OPNFIL(LFNLOC,CONFIL,'OLD','FORMATTED',
     1              'READONLY ',' ',IOSTAT)
        CALL OPNERR(LFNERR,LFNLOC,IOSTAT,CONFIL,'DEFCON')
C
C READ ONE LINE OF CONSTANT FILE
100     READ(LFNLOC,10,END=200)CONPAR,STRING
10      FORMAT(A6,3X,A16)
C
C SPEED OF LIGHT
        IF(CONPAR.EQ.'C     ')THEN
          READ(STRING,*,ERR=910)C
20        FORMAT(D17.10)
C
C GPS FREQUENCIES
        ELSEIF(CONPAR.EQ.'FREQ1 ')THEN
          READ(STRING,*,ERR=910)FREQ(1)
        ELSEIF(CONPAR.EQ.'FREQ2 ')THEN
          READ(STRING,*,ERR=910)FREQ(2)
        ELSEIF(CONPAR.EQ.'FREQ5 ')THEN
          READ(STRING,*,ERR=910)FREQ(3)
        ELSEIF(CONPAR.EQ.'FREQP ')THEN
          READ(STRING,*,ERR=910)FREQP
C
C GLONASS FREQUENCIES
        ELSEIF(CONPAR.EQ.'FREQG1')THEN
          READ(STRING,*,ERR=910)FREQG(1)
        ELSEIF(CONPAR.EQ.'FREQG2')THEN
          READ(STRING,*,ERR=910)FREQG(2)
        ELSEIF(CONPAR.EQ.'DFRQG1')THEN
          READ(STRING,*,ERR=910)DFREQG(1)
        ELSEIF(CONPAR.EQ.'DFRQG2')THEN
          READ(STRING,*,ERR=910)DFREQG(2)
        ELSEIF(CONPAR.EQ.'FREQGP')THEN
          READ(STRING,*,ERR=910)FREQGP
C
C GALILEO FREQUENCIES
        ELSEIF(CONPAR.EQ.'FRQE1 ')THEN
          READ(STRING,*,ERR=910)FREQE(1)
        ELSEIF(CONPAR.EQ.'FRQE5 ')THEN
          READ(STRING,*,ERR=910)FREQE(2)
        ELSEIF(CONPAR.EQ.'FRQE5a')THEN
          READ(STRING,*,ERR=910)FREQE(3)
        ELSEIF(CONPAR.EQ.'FRQE5b')THEN
          READ(STRING,*,ERR=910)FREQE(4)
        ELSEIF(CONPAR.EQ.'FRQE6 ')THEN
          READ(STRING,*,ERR=910)FREQE(5)
C
C SBAS FREQUENCIES
        ELSEIF(CONPAR.EQ.'FRQS1 ')THEN
          READ(STRING,*,ERR=910)FREQS(1)
        ELSEIF(CONPAR.EQ.'FRQS5 ')THEN
          READ(STRING,*,ERR=910)FREQS(2)
C
C COMPASS/BEIDOU FREQUENCIES
        ELSEIF(CONPAR.EQ.'FRQC1 ')THEN
          READ(STRING,*,ERR=910)FREQC(1)
        ELSEIF(CONPAR.EQ.'FRQC2 ')THEN
          READ(STRING,*,ERR=910)FREQC(2)
        ELSEIF(CONPAR.EQ.'FRQC5b')THEN
          READ(STRING,*,ERR=910)FREQC(3)
        ELSEIF(CONPAR.EQ.'FRQC6 ')THEN
          READ(STRING,*,ERR=910)FREQC(4)
C
C QZSS FREQUENCIES
        ELSEIF(CONPAR.EQ.'FRQJ1 ')THEN
          READ(STRING,*,ERR=910)FREQJ(1)
        ELSEIF(CONPAR.EQ.'FRQJ2 ')THEN
          READ(STRING,*,ERR=910)FREQJ(2)
        ELSEIF(CONPAR.EQ.'FRQJ5 ')THEN
          READ(STRING,*,ERR=910)FREQJ(3)
        ELSEIF(CONPAR.EQ.'FRQJ6 ')THEN
          READ(STRING,*,ERR=910)FREQJ(4)
C
C GM - VALUE
        ELSEIF(CONPAR.EQ.'GM    ')THEN
          READ(STRING,*,ERR=910)GM
C
C G*MSUN, G*MMOON
        ELSEIF(CONPAR.EQ.'GMS   ')THEN
          READ(STRING,*,ERR=910)GMS
        ELSEIF(CONPAR.EQ.'GMM   ')THEN
          READ(STRING,*,ERR=910)GMM
C
C ASTRONOMICAL UNIT
        ELSEIF(CONPAR.EQ.'AU    ')THEN
          READ(STRING,*,ERR=910)AU
C
C EQUATOR RADIUS OF EARTH
        ELSEIF(CONPAR.EQ.'AE    ')THEN
          READ(STRING,*,ERR=910)AE
C
C DYNAMICAL FORM-FACTOR IERS(2003)
        ELSEIF(CONPAR.EQ.'J2    ')THEN
          READ(STRING,*,ERR=910)J2
C
C MEAN RADIUS OF THE EARTH
        ELSEIF(CONPAR.EQ.'CONRE ')THEN
          READ(STRING,*,ERR=910)CONRE
C
C IONOSPHERIC FACTOR
        ELSEIF(CONPAR.EQ.'FACTEC')THEN
          READ(STRING,*,ERR=910)FACTEC
C
C NOMINAL VALUE FOR RADIATION PRESSURE
        ELSEIF(CONPAR.EQ.'P0    ')THEN
          READ(STRING,*,ERR=910)P0
C
C ANGULAR VELOCITY OF EARTH
        ELSEIF(CONPAR.EQ.'OMEGA ')THEN
          READ(STRING,*,ERR=910)OMEGA
C
C REDUCTION FROM UTC TO EPHEMERIS TIME
        ELSEIF(CONPAR.EQ.'ET-UTC')THEN
          READ(STRING,*,ERR=910)ETUT
C
C READ WEIGHTS FOR PHASE- AND CODE-OBSERVATIONS
        ELSEIF(CONPAR.EQ.'WGTPHA')THEN
          READ(STRING,*,ERR=910)WGTPHA
        ELSEIF(CONPAR.EQ.'WGTCOD')THEN
          READ(STRING,*,ERR=910)WGTCOD
C
C METEO MODEL
        ELSEIF(CONPAR.EQ.'HREF  ')THEN
          READ(STRING,*,ERR=910)HREF
        ELSEIF(CONPAR.EQ.'PREF  ')THEN
          READ(STRING,*,ERR=910)PREF
        ELSEIF(CONPAR.EQ.'TREF  ')THEN
          READ(STRING,*,ERR=910)TREF
        ELSEIF(CONPAR.EQ.'HUMREF')THEN
          READ(STRING,*,ERR=910)HUMREF
        ENDIF
C
        GOTO 100
C
C     END OF FILE
200     CONTINUE
C
C COMPUTE WAVELENGTH
        WLGTH(1)=C/FREQ(1)
        WLGTH(2)=C/FREQ(2)
        WLGTH(3)=WLGTH(1)*WLGTH(2)/(WLGTH(1)+WLGTH(2))
        WLGTH(4)=WLGTH(1)-WLGTH(2)
        WLGTH(5)=WLGTH(1)*WLGTH(2)/(WLGTH(2)-WLGTH(1))
C
C DEFINE VALUES OF COMMON FREQUENCY AND WAVELENGTH ARRAY FOR THE GPS
C SATELLITES (NUMBERS 1 TO 100)
        DO I=1,100
          FRQ(1,I)=FREQ(1)
          FRQ(2,I)=FREQ(2)
C
          WLGT(1,I)=WLGTH(1)
          WLGT(2,I)=WLGTH(2)
          WLGT(3,I)=WLGTH(3)
          WLGT(4,I)=WLGTH(4)
          WLGT(5,I)=WLGTH(5)
        ENDDO
C
C CONSTANTS ARE DEFINED
        CONST_DEF=1
C
        GOTO 999
C
C ERROR DECODING DATA
910     WRITE(LFNERR,941) CONPAR,STRING
941     FORMAT(/,' *** SR DEFCON: ERROR DECODING DATA ON THE ',
     1              'FOLLOWING LINE:',
     2              /,1X,A6,3X,A16,/)
        CALL EXITRC(2)
C
C CLOSE FILE WITH GPS CONSTANTS
999     CLOSE(UNIT=LFNLOC)
C
      ENDIF
      RETURN
      END SUBROUTINE

      END MODULE
