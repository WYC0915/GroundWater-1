      MODULE f_sigma1
      CONTAINS

C*
      FUNCTION SIGMA1(IRTYP,NPAR,NPARMS,NOBS,PAR,INDP,AOBS,INDA,BOBS,
     1                WEIGHT,BNOR,FTF,VSIG,SIGAPR)
CC
CC NAME       :  SIGMA1
CC
CC PURPOSE    :  COMPUTE RMS ERROR OF ADJUSTMENT IN BERNESE
CC               GPS SOFTWARE.
CC               IF IRTYP=0 USE FORMULA
CC                              T
CC                 RMS**2 = (PHI *WEIGHT*PHI - BNOR*PAR)/(NOBS-NPARMS)
CC               IF IRTYP=1
CC                 RMS**2= RES WEIGHT *RES/(NOBS-NPARMS)
CC                 USING INFORMATION FROM FILE
CC
CC PARAMETERS :
CC         IN :  IRTYP  : TYPE OF METHOD USED TO COMPUTE      I*4
CC                        RESIDUALS
CC               NPAR   : NUMBER OF PARAMETERS                I*4
CC               NPARMS : NUMBER OF PARAMETERS TO COMPUTE RMS I*4
CC               NOBS   : NUMBER OF OBSERVATIONS              I*4
CC               PAR(I),I=1,..,NPAR: PARAMETERS               R*8
CC               INDP(I),I=1,..,NPAROLD: OLD LOCATION OF      I*4
CC                        PARAMETER I IN OLD LOCQ,BNOR,...
CC               AOBS(I),I=1,.. : NON ZERO ELEMENTS OF FIRST  R*8
CC                        DESIGN MATRIX FOR ONE EPOCH/FREUENCY
CC               INDA(I),I=1,.. : LINEARIZED ARRAY OF INDICES I*2
CC                        FOR MATRIX AOBS
CC               WEIGHT(I),I=1,.. : WEIGHT MATRIX FOR ONE     R*8
CC                        EPOCH
CC               BNOR(I),I=1,..,NPAR: RIGHT HAND SIDE OF      R*8
CC                        NORMAL EQUATION SYSTEM
CC                          T
CC               FTF    : PHI  * WEIGHT PHI, PHI=OBS-COMP     R*8
CC               VSIG(I),I=1,..,NDIM: AUX. ARRAY              R*8
CC               SIGAPR : APRIORI SIGMA                       R*8
CC       OUT  :  SIGMA1 : FUNCTION VALUE                      R*8
CC
CC REMARKS    :  ---
CC
CC AUTHOR     :  G.BEUTLER
CC
CC VERSION    :  3.4  (JAN 93)
CC
CC CREATED    :  87/10/26 10:42
CC
CC CHANGES    :  28-JAN-93 : EB: SQRT OF NEGATIVE VALUE NOT POSSIBLE
CC               12-MAR-93 : MR: SKIP REFERENCE AMBIGUITY
CC               10-AUG-94 : MR: CALL EXITRC
CC               22-SEP-94 : EB: HANDLING OF CASE DEGREE OF FREEDOM = 0
CC               30-JAN-96 : TS: ALLOW SQRT OF NEGATIVE VALUE WITH WARNING
CC               05-FEB-97 : JJ: MR: TEST NEG.DEG. FREEDOM BEFORE RMS<0
CC               27-JAN-00 : TS: SMALL CHANGES IN SCRATCH RESIDUAL FILE
CC               09-FEB-02 : RD: WEIGHT REAL*4->REAL*8
CC               18-SEP-02 : SS: PRINT MODIFIED WARNING IN CASE OF DOF=0
CC               21-JUN-05 : MM: COMLFNUM.inc REMOVED, m_bern ADDED
CC               23-JUN-05 : MM: IMPLICIT NONE AND DECLARATIONS ADDED
CC               14-SEP-05 : HB: SCRATCH FILE SPLITTING GENERALLY SOLVED
CC               03-FEB-06 : RD: ENABLE MODULE FOR SIGMA1
CC               23-FEB-06 : RD: REMOVE DTFIL FROM SCRATCH RECORD
CC
CC COPYRIGHT  :  ASTRONOMICAL INSTITUTE
CC      1987     UNIVERSITY OF BERN
CC               SWITZERLAND
CC
C*
      USE m_bern
      USE s_gtflna
      USE s_opnfil
      USE s_opnerr
      IMPLICIT NONE
C
C DECLARATIONS INSTEAD OF IMPLICIT
C --------------------------------
      INTEGER*4 I     , IDUMMY, IEPO  , IK    , IND   , IOBS  , IPAR  ,
     1          IREC  , IRTYP , K     , KPAR  , MAXEQN, MXESNG, NDIM  ,
     2          NITEM , NOBS  , NPAR  , NPARMS, NREC
C
      REAL*8    FTF   , RMS   , SIGAPR, SIGMA1
C
CCC       IMPLICIT REAL*8 (A-H,O-Z)
CCC       IMPLICIT INTEGER*4 (I-N)

      CHARACTER*255 NEWFIL
      CHARACTER*32 FILAUX
      REAL*8 AOBS(*),BOBS(*),BNOR(*),VSIG(*),PAR(*)
      REAL*8 WEIGHT(*)
      INTEGER*4 INDP(*)
      INTEGER*4 INDA(*)
      INTEGER*4 IOSTAT,IRC
C
C COMPUTE RMS ERROR
      IF(IRTYP.EQ.0)THEN
        RMS=FTF
        DO 10 IPAR=1,NPAR
          RMS=RMS-BNOR(IPAR)*PAR(IPAR)
10      CONTINUE
      ELSE
        CLOSE(unit=lfnres)
        CALL GTFLNA(1,'AUXFIL ',FILAUX,IRC)
        CALL OPNFIL(LFNRES,FILAUX,'UNKNOWN','UNFORMATTED',
     1              ' ',' ',IOSTAT)
        CALL OPNERR(LFNERR,LFNRES,IOSTAT,FILAUX,'RESOUT')

        RMS=0.D0
        DO 100 IEPO=1,1000000
C
C READ FIRST RECORD OF ONE EPOCH
        READ(LFNRES,END=110)NDIM,MAXEQN,MXESNG,IDUMMY,IDUMMY

C END OF SCRATCH FILE => NEW FILE HAS TO BE OPENED
        IF (NDIM == -1) THEN
          READ(LFNRES)newFil
          CLOSE(unit=LFNRES)
          CALL OPNFIL(LFNRES,NEWFIL,'UNKNOWN','UNFORMATTED',
     1                ' ',' ',IOSTAT)
          CALL OPNERR(LFNERR,LFNRES,IOSTAT,NEWFIL,'WTRESI')
          READ(LFNRES,END=110)NDIM,MAXEQN,MXESNG,IDUMMY,IDUMMY
        ENDIF

        NREC=(NDIM+1)/2
        NITEM=NDIM*(NDIM+1)/2/NREC
C
C READ WEIGHT MATRIX
        DO 20 IREC=1,NREC
          READ(LFNRES)(WEIGHT((IREC-1)*NITEM+I),I=1,NITEM)
20      CONTINUE
C
C READ MATRIX AOBS, INDA AND BOBS
        DO 30 IOBS=1,NDIM
          READ(LFNRES)IDUMMY,IDUMMY,IDUMMY,IDUMMY,IDUMMY,
     2                (AOBS(IOBS+(K-1)*MAXEQN),INDA(IOBS+(K-1)*MAXEQN),
     3                K=1,MXESNG),BOBS(IOBS)
30      CONTINUE
C
C COMPUTE RESIDUALS OF EPOCH
        DO 50 I=1,NDIM
          VSIG(I)=-BOBS(I)
          DO 40 K=1,MXESNG
            IND=I+(K-1)*MAXEQN
            KPAR=INDA(IND)
            IF (KPAR.EQ.0) GOTO 50
            IF (INDP(KPAR).EQ.0) GOTO 40
            VSIG(I)=VSIG(I)+AOBS(IND)*PAR(INDP(KPAR))
40        CONTINUE
50      CONTINUE
C          T
C COMPUTE V *WEIGHT*V
        DO 60 I=1,NDIM
          DO 60 K=1,NDIM
            IK=I+K*(K-1)/2
            IF(I.GT.K)IK=K+I*(I-1)/2
            RMS=RMS+VSIG(I)*WEIGHT(IK)*VSIG(K)
60      CONTINUE
100     CONTINUE
      END IF
C
C COMPUTE A POSTERIORI ESTIMATE FOR MEAN ERROR OF UNIT WEIGHT
110   CONTINUE
      IF (RMS.GT.0 .AND. NOBS-NPARMS.GT.0) THEN
        SIGMA1=DSQRT(RMS/(NOBS-NPARMS))
      ELSE
        IF (NOBS-NPARMS.EQ.0) THEN
          SIGMA1=SIGAPR
          WRITE(LFNERR,901)
901       FORMAT(/,' ### SR SIGMA1: NO REDUNDANCY (DOF=0)',/,
     1         16X,'RMS SET TO APRIORI SIGMA OF OBSERVATION',/)
        ELSEIF (NOBS-NPARMS.LT.0) THEN
          SIGMA1=SIGAPR
          WRITE(LFNERR,902)
902       FORMAT(/,' ### SR SIGMA1: NUMBER OF OBSERVATIONS ',
     1             'SMALLER THAN NUMBER OF UNKNOWNS !',/,
     2         16X,'RMS SET TO APRIORI SIGMA OF OBSERVATION',/)
        ELSEIF (RMS.LT.0) THEN
          SIGMA1=SIGAPR
          WRITE(LFNERR,903)
903       FORMAT(/,' ### SR SIGMA1: NEGATIVE SUM OF ',
     1             'SQUARED RESIDUALS !',/,
     2         16X,'RMS SET TO APRIORI SIGMA OF OBSERVATION',/)
        ENDIF
      ENDIF
C
      RETURN
      END FUNCTION

      END MODULE
