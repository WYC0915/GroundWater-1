      MODULE s_RFIAPL
      CONTAINS

C*
      SUBROUTINE RFIAPL(F,S,Z,XL,XMJD,D)
CC
CC NAME       :  RFIAPL
CC
CC PURPOSE    :  THIS SUBROUTINE COMPUTES THE IONOSPHERIC DISTANCE
CC               CORRECTION FOR A FREQUENCY F ACCORDING TO THE
CC               MODEL DEVELOPED IN THE PAPER "EVALUATION OF THE
CC               IONOSPHERIC CORRECTION ALGORITHM FOR SINGLE-
CC               FREQUENCY DOPPLER NAVIGATION USING TRANET II DATA"
CC               BY W.J.GECKLE , M. M. FEEN , JOHN HOPKINS
CC               UNIVERSITY , APPLIED PHYSICS LAB., MARYLAND 20707
CC
CC PARAMETERS :
CC         IN :  F      : FREQUENCY (HZ)                      R*8
CC               S      : AVERAGE DAILY SOLAR FLUX            R*8
CC               Z      : ZENITH DISTANCE IN RADIANS          R*8
CC               XL     : LONGITUDE (POS. TO EAST OF          R*8
CC                        GREENWICH) IN RADIANS
CC               XMJD   : MODIFIED JULIAN DATE                R*8
CC        OUT :  D      : IONOSPHERIC DISTANCE CORRECTION (M) R*8
CC
CC REMARKS    :  ---
CC
CC AUTHOR     :  G.BEUTLER
CC
CC VERSION    :  3.4  (JAN 93)
CC
CC CREATED    :  87/12/11 12:02
CC
CC CHANGES    :  23-JUN-05 : MM: IMPLICIT NONE AND DECLARATIONS ADDED
CC               28-FEB-07 : AG: USE PI FROM DEFCON
CC               04-MAY-12 : RD: USE DMOD FROM MODULE
CC
CC COPYRIGHT  :  ASTRONOMICAL INSTITUTE
CC      1987     UNIVERSITY OF BERN
CC               SWITZERLAND
CC
C*
      USE d_const,  ONLY: pi
      USE l_basfun, ONLY: dmod
      IMPLICIT NONE
C
C DECLARATIONS INSTEAD OF IMPLICIT
C --------------------------------
      INTEGER*4 MJD
C
      REAL*8    C1  , C2  , C3  , D   , ECV , F   , HA  , S   ,
     1          UT  , XL  , XMJD, Z
C
CCC       IMPLICIT REAL*8 (A-H,O-Z)
C      PI=3.14159265D0
      MJD=INT(XMJD)
      UT=(XMJD-MJD)*24D0
      HA=XL*12D0/PI+UT+240D0
      HA=DMOD(HA,24.D0)
      IF(HA.LT.8.D0)HA=HA+24D0
C
      C1=-41.68
      C2=1.19138
      C3=1.17418
C
      IF(HA.GT.20.D0)ECV=(C1+C2*S)*1.D15*DEXP(-.23026D0*(HA-20))
      IF(HA.GT.8.D0.AND.HA.LT.20.D0)
     1  ECV=(C1+C2*S*(1D0+C3*DSIN((HA-8D0)/12D0*PI)))*1.D15
C
      D=41D0/F**2*ECV/DCOS(Z)
      RETURN
      END SUBROUTINE

      END MODULE
